<Window x:Class="frmXMLObjectCreateItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Create Incident" 
        SizeToContent="WidthAndHeight" 
         ResizeMode="NoResize" 
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}" 
        Icon="/CSiTester;component/CSiTester.ico"
        FontFamily="Microsoft Sans Serif"
        Closing="Window_Closing">
    <Window.Resources>
        <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="fieldPrompt" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrushOptional" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <StackPanel Orientation="Horizontal"  Background="White" VerticalAlignment="Bottom">
                            <Label Content="Optional" Foreground="LightGray" Width="500" FontWeight="Black" FontStyle="Italic" VerticalContentAlignment="Center"/>
                        </StackPanel>
                    </VisualBrush.Visual>
                </VisualBrush>
                <VisualBrush x:Key="CueBannerBrushRequired" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <StackPanel Orientation="Horizontal"  Background="White" >
                            <Label Content="Required" Foreground="Tomato" Width="500" Height="500" FontWeight="Black" FontStyle="Italic" VerticalContentAlignment="Center"/>
                        </StackPanel>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>
            <Style.Triggers>
                <!--'Required' multitrigger does not specify a particular field, but is overritten by the 'Optional' multitrigger for specific fields-->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource CueBannerBrushRequired}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Text" Value="{x:Null}"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource CueBannerBrushRequired}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                        <Condition Property="Name" Value="txtBxFileDestination" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource CueBannerBrushOptional}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Text" Value="{x:Null}"/>
                        <Condition Property="Name" Value="txtBxFileDestination" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource CueBannerBrushOptional}" />
                </MultiTrigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <GroupBox Margin="-5" Padding="5">
            <Grid x:Name="gridMain">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="gridDate" Height="1*"/>
                    <RowDefinition x:Name="gridTtBx1" Height="1*"/>
                    <RowDefinition x:Name="gridTtBx2" Height="1*"/>
                    <RowDefinition x:Name="gridTtBxFileName" Height="1*"/>
                    <RowDefinition x:Name="gridTtBxCopy" Height="Auto"/>
                    <RowDefinition x:Name="gridChkBx1" Height="1*"/>
                    <RowDefinition x:Name="gridTtBxNumber" Height="1*"/>
                    <RowDefinition x:Name="gridComment" Height="1*"/>
                    <RowDefinition x:Name="gridBtns" Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="21*"/>
                    <ColumnDefinition Width="110*"/>
                </Grid.ColumnDefinitions>

        
                <Label Content="Date" 
                       Grid.Row="0" Grid.Column="0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="0,0,0,10"/>

                <StackPanel Orientation="Horizontal" 
                            Grid.Row="0" Grid.Column="1"
                            VerticalAlignment="Center" HorizontalAlignment="Left" 
                            Margin="0,0,0,10">
                    <ComboBox x:Name="cmbBxYear" Width="80"/>
                    <ComboBox x:Name="cmbBxMonth" Width="50"/>
                    <ComboBox x:Name="cmbBxDay" Width="50"/>
                </StackPanel>

                <Label x:Name="lblText1" Content="lblText1" 
                       Grid.Row="1" Grid.Column="0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="0,0,0,10"/>
                <TextBox x:Name="txtBxText1" 
                        Grid.Row="1" Grid.Column="1"
                        Height="23" TextWrapping="Wrap" Width="240"
                         HorizontalAlignment="Left"
                         Margin="0,0,0,10"
                        Text="{Binding txtField1Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource fieldPrompt}"/>              
                
                <Label x:Name="lblText2" Content="lblText2" 
                       Grid.Row="2" Grid.Column="0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="0,0,0,10"/>
                <TextBox x:Name="txtBxText2" 
                        Grid.Row="2" Grid.Column="1"
                        Height="23" TextWrapping="Wrap" Width="240"
                        HorizontalAlignment="Left"
                        Margin="0,5,0,15"
                        Text="{Binding txtField2Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource fieldPrompt}"/>

                <Label x:Name="lblFileName" Content="File Name" 
                       Grid.Row="3" Grid.Column="0"
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Margin="0,0,0,10"/>
                <StackPanel Orientation="Horizontal"
                        Grid.Row="3" Grid.Column="1">   
                    <TextBox x:Name="txtBxFilename"          
                        Height="23" TextWrapping="Wrap" Width="120"
                        HorizontalAlignment="Left"
                        Margin="0,0,0,10"
                        Text="{Binding fileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>  
                    <StackPanel Orientation="Vertical"
                                Margin="10,15,10,10">
                        <CheckBox x:Name="chkBxFileNameAsModel"  
                            HorizontalAlignment="Left" VerticalAlignment="Top"
                            Margin="0"   
                            Content="File Name Same As Model"
                            IsChecked="{Binding fileSameAsModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="txtBxFileExtension" 
                                    Height="23" TextWrapping="Wrap" Width="40"
                                    HorizontalAlignment="Left"
                                    Margin="15,0,0,0"
                                    Text="{Binding fileExtension, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label x:Name="lblFileExtension" Content="Extension" 
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Margin="0,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Vertical"
                            Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                    <GroupBox Header="Source">
                        <StackPanel Orientation="Vertical">
                            <Button x:Name="btnFileSource" Content="Select File Source" 
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="20,5,5,5" />
                            <TextBox x:Name="txtBxFileSource" 
                                    Height="23" TextWrapping="NoWrap" Width="300"
                                    HorizontalAlignment="Left"
                                    Margin="20,0,0,5"
                                    Text="{Binding fileSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{Binding fileSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource fieldPrompt}"/>
                            <CheckBox x:Name="chkBxCopySource"  
                              HorizontalAlignment="Left" VerticalAlignment="Top"
                              Margin="20,0,0,5"   
                              Content="Copy Source to Destination"
                              IsChecked="{Binding copySourceToDestination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Destination">
                        <StackPanel Orientation="Vertical">
                            <CheckBox x:Name="chkBxDefaultDestination"  
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="20,10,5,0"   
                                Content="Default Destination"
                                IsChecked="{Binding destinationIsDefault, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button x:Name="btnFileDestination" Content="Select Folder Destination" 
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="20,5,5,5" />
                            <TextBox x:Name="txtBxFileDestination" 
                                    Height="23" TextWrapping="NoWrap" Width="300"
                                    HorizontalAlignment="Left"
                                    Margin="20,0,0,15"
                                    Text="{Binding fileDestination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource fieldPrompt}"
                                    ToolTip="{Binding fileDestination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTipService.ShowOnDisabled="True"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>

                <StackPanel Orientation="Vertical"
                            Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2">
                    <CheckBox x:Name="chkBxAddExcelResultToMCFile"
                          Margin="5"
                          Content="Add Excel Results to Model Control File"
                          IsChecked="{Binding addExcelResultToMCFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox x:Name="chkBxApplyToGroup"
                          Margin="5"
                          Content="Add to All Models in Example"
                          IsChecked="{Binding applyToGroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
                
                <Label x:Name="lblNumber" Content="lblNumber" 
                       Grid.Row="6" Grid.Column="0"
                       HorizontalAlignment="Left"  VerticalAlignment="Center"
                       Margin="0,0,0,10"/>
                <TextBox x:Name="txtBxNumber" 
                        Grid.Row="6" Grid.Column="1"
                        Height="23" TextWrapping="Wrap" Width="120"
                        HorizontalAlignment="Left" 
                        Margin="0,0,0,10"
                        Text="{Binding txtNumberValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
           
                <Label x:Name="lblComment" Content="Comment" 
                           Grid.Row="7" Grid.Column="0"
                           HorizontalAlignment="Left"  VerticalAlignment="Top"
                           Margin="0,0,0,10"/>
                <TextBox x:Name="txtFieldComment" 
                             Grid.Row="7" Grid.Column="1"
                             Height="100" Width="200" TextWrapping="WrapWithOverflow" 
                             HorizontalAlignment="Left"
                             Margin="0,0,0,10"
                            Text="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource fieldPrompt}"
                            ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto"/>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" 
                            Grid.Row="8" Grid.ColumnSpan="2">
                    <Button x:Name="btnAdd" Content="Add" 
                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Margin="5,0,5,0" 
                            Width="75" />
                    <Button x:Name="btnRemove" Content="Remove" 
                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Margin="5,0,5,0" 
                            Width="75" />
                    <Button x:Name="btnClose" Content="Close" 
                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Margin="5,0,5,0" 
                            Width="75" />
                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
